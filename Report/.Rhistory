da <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%M/%Y"))
?as.character
?as.POSIXct
da <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
date <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
?strptime
data(puechabonsp)
locs <- puechabonsp$relocs
df <- as.data.frame(locs)
View(df)
date <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
cougars$LMT_Date
as.character(cougars$LMT_Date)
str(cougars)
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T, colClasses = c("integer", "integer", "Date", "Time", "Date", "Time", "numeric", "numeric", "integer", "integer", "integer", "integer"))
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T, colClasses = c("integer", "integer", "Date", "POSIXct", "Date", "POSIXct", "numeric", "numeric", "integer", "integer", "integer", "integer"))
View(df)
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T, colClasses = c("integer", "integer", "Date", "Factor", "Date", "Factor", "numeric", "numeric", "integer", "integer", "integer", "integer"))
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T, colClasses = c("integer", "integer", "Date", "factor", "Date", "factor", "numeric", "numeric", "integer", "integer", "integer", "integer"))
head(cougars)
cougarsSPDF = SpatialPointsDataFrame(coords = cougars[,c("easting","northing")], data = cougars)
names(cougarsSPDF)
xy <- coordinates(cougarsSPDF)  # coordinates are stored in my SPDF
catID <- cougars[,1]
date <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
str(cougars)
str(df)
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T, colClasses = c("integer", "integer", "integer", "integer", "integer", "factor", "numeric", "numeric", "integer", "integer", "integer", "integer"))
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T))
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T)
cougarsSPDF = SpatialPointsDataFrame(coords = cougars[,c("easting","northing")], data = cougars)
xy <- coordinates(cougarsSPDF)  # coordinates are stored in my SPDF
catID <- cougars[,1]
date <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
date
cougars$LMT_Date
as.POSIXct
?as.POSIXct
date <- as.POSIXlt(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
date <- as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
as.POSIXct(strptime(as.character(cougars$LMT_Date), "%d/%m/%Y"))
View(cougars)
data <- as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
rm(data)
cougars$LMT_DATE
as.character(cougars$LMT_DATE)
strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y")
as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
date = as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
str(as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y")))
rm(date)
date = as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y")
da = as.POSIXct(strptime(as.character(cougars$LMT_DATE), "%d/%m/%Y"))
date = as.POSIXct(strptime(as.character(cougarsSPDF$LMT_DATE), "%d/%m/%Y"))
cougars2 <- as.data.frame(cougarsSPDF)
catID <- cougars2[,1]
date = as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
date = as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
date
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=catID)
View(cougars2)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=catID)
View(cougars2)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=cougars2$summer1)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=cougars2$day)
data(puechabonsp)
locs <- puechabonsp$relocs
head(locs)
xy <- coordinates(locs)
df <- as.data.frame(locs)
id <- df[,1]
(litrI <- as.ltraj(xy, id = id, typeII=FALSE))
plot(litrI)
da <- as.character(df$Date)
da <- as.POSIXct(strptime(as.character(df$Date),"%y%m%d"))
(tr1 <- as.ltraj(xy[id=="Brock",],
)
)
(tr1 <- as.ltraj(xy[id=="Brock",],
date = da[id=="Brock"],
id="Brock"))
plot(tr1)
head(locs)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=catID)
catID
catID <- as.chracter(cougars2[,1])
catID <- as.character(cougars2[,1])
date = as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID)
xy <- coordinates(cougarsSPDF)  # coordinates are stored in my SPDF
cougars2 <- as.data.frame(cougarsSPDF)
catID <- as.character(cougars2[,1])
date = as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID)
cougars <- read.csv("P:/SSF PROJECT/UTMsREDUCED.csv", head=T)
cougarsSPDF = SpatialPointsDataFrame(coords = cougars[,c("easting","northing")], data = cougars)
xy <- coordinates(cougarsSPDF)  # coordinates are stored in my SPDF
cougars2 <- as.data.frame(cougarsSPDF)
cougars2 <- as.data.frame(cougarsSPDF)
catID <- as.character(cougars2[,1])
date = as.POSIXct(strptime(as.character(cougars2$LMT_DATE), "%d/%m/%Y"))
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID)
cougarsLTR <- adehabitatLT:::as.ltraj(xy, date, id = catID, burst=T)
XY <- coordinates(cougarsSPDF)  # coordinates are stored in my SPDF
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = catID, burst=T)
data(puechabonsp)
locs <- puechabonsp$relocs
xy <- coordinates(locs)
df <- as.data.frame(locs)
id <- df[,1]
View(df)
(litrI <- as.ltraj(xy, id = id, typeII=FALSE))
plot(litrI)
summary(cougars2)
str(locs)
str(cougars2)
str(df)
str(cougars2)
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = catID, burst=)
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = "10286")
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = 10286)
unique(cougars2$cat)
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = 10293)
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = "10293")
?as.factor()
as.factor(cougars2[,1])
cougars2[,1] <- as.factor(cougars2[,1])
str(cougras2)
str(cougars2)
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = "10293")
catID <- as.character(cougars2[,1])
cougarsLTR <- adehabitatLT:::as.ltraj(XY, date, id = "10293")
cougarsLTR <- adehabitatLT:::as.ltraj(XY, XY[id=="10286",], date = date[id=="10286"], id="10286"))
cougarsLTR <- adehabitatLT:::as.ltraj(XY, XY[id=="10286",], date = date[id=="10286"], id="10286")
cougarsLTR <- adehabitatLT:::as.ltraj(XY[id=="10286",], date = date[id=="10286"], id="10286")
cougarsLTR <- adehabitatLT:::as.ltraj(XY[catID=="10286",], date = date[catID=="10286"], id="10286")
<<<<<<< HEAD
>>>>>>> fbdcfe621d003f329a5c7d1fe40dce142ac0c74d
=======
require(hab)
require(adehabitatMA)
require(adehabitatHR)
require(adehabitatLT)
library("hab")
mean(1,2,3,4,5,6)
mean(c(1,2,3,4,5,6))
>>>>>>> 482d3025bed7e9c29fad11ee2b12cd6f1ddbea76
<<<<<<< HEAD
?ld
library("sp", lib.loc="C:/Program Files/R/R-3.1.1/library")
?ld
??ld
=======
?nextr
?nextr
??nextr
?glmer
glmer
??glmer
>>>>>>> 2b5fcf2d73739d75a9080949d9d26df35a443b69
getwd()
plotltr(xmpl.ltr, "dt/3800/3")
getwd()
ruggedness <- raster("P:/SSF PROJECT/
NEW GIS LAYERS/tri1")
library("raster", lib.loc="C:/Program Files/R/R-3.1.1/library")
ruggedness <- raster("P:/SSF PROJECT/
NEW GIS LAYERS/tri1")
ruggedness <- raster("P:\SSF PROJECT\NEW GIS LAYERS")
ruggedness <- raster("P:/SSF PROJECT/NEW GIS LAYERS/tri1")
landcover <- raster("P:/SSF PROJECT/NEW GIS LAYERS/lc_30")
load("xmpl.steps.spdf")
getwd()
load("P:/Henriette/BestPracticeR/SSF-workflow/Report/xmpl.steps.spdf.Rdata")
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover, xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
cor(Z)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
cor(Z)
View(xmpl.steps.df)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
cor(Z)
Z
head(Z)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
View(xmpl.steps.df)
attach(xmpl.steps.df)
load("P:/Henriette/BestPracticeR/SSF-workflow/Report/xmpl.steps.spdf.Rdata")
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover, xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
View(Z)
cor(Z)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover, xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
cor(Z)
View(Z)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover,
xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
cor(Z)
load("P:/Henriette/BestPracticeR/SSF-workflow/Report/xmpl.steps.spdf.Rdata")
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover,
xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
cor(Z)
View(xmpl.steps.df)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover,
)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover,
xmpl.steps.df$disthighway, xmpl.steps.df$distroad,landcover)
Z = cbind(xmpl.steps.df$ruggedness, xmpl.steps.df$canopycover,
xmpl.steps.df$disthighway, xmpl.steps.df$distroad,xmpl.steps.df$landcover)
cor(Z)
View(Z)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
cor(Z)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
detach(xmpl.steps.df)
cor(Z)
?cor
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
detach(xmpl.steps.df)
cor(Z)
View(Z)
install.packages("lme4")
install.packages("mclogit")
install.packages("effects")
??R2n
?ltraj content
?ltraj
??ltraj
library("adehabitatHR", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("adehabitatHS", lib.loc="C:/Program Files/R/R-3.1.1/library")
detach("package:adehabitatLT", unload=TRUE)
detach("package:adehabitatMA", unload=TRUE)
library("adehabitatLT", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("adehabitatMA", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("hab", lib.loc="C:/Program Files/R/R-3.1.1/library")
load("//csrv05/public$/Caro/SSF-workflow/Report/xmpl.steps.spdf.Rdata")
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
attach(xmpl.steps.df)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
cor(Z)
summary(Z)
?pairs
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(USJudgeRatings[1:5], panel = panel.smooth,
cex = 1.5, pch = 24, bg = "light blue",
diag.panel = panel.hist, cex.labels = 2, font.labels = 2)
## put (absolute) correlations on the upper panels,
## with size proportional to the correlations.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Z, lower.panel = panel.smooth, upper.panel = panel.cor)
pairs(Z, lower.panel = panel.smooth, upper.panel = panel.cor,diag.panel = panel.hist)
View(Z)
View(xmpl.steps.df)
View(xmpl.steps.df)
head(xmpl.steps.df.num)
xmpl.steps.df.num = xmpl.steps.spdf
head(xmpl.steps.df.num)
xmpl.steps.df.num$landcover <- as.factor(
ifelse(landcover.extr[,2] == "forest",1,
ifelse(landcover.extr[,2] == "open",2,NA))
xmpl.steps.df.num$landcover <- as.factor(
ifelse(landcover.extr[,2] == "forest",1,
ifelse(landcover.extr[,2] == "open",2,NA)))
view(xmpl.steps.df)
head(xmpl.steps.df)
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num = xmpl.steps.df
xmpl.steps.df.num$landcover <- as.factor(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open",2,NA)))
xmpl.steps.df = as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num = xmpl.steps.df
xmpl.steps.df.num$landcover <- ifelse(
xmpl.steps.df$landcover == "forest",1,ifelse(
xmpl.steps.df$landcover == "open",2,NA)))
head(xmpl.steps.df.num)
head(xmpl.steps.df)
xmpl.steps.df.num$landcover <- as.numeric(
xmpl.steps.df$landcover == "forest",1,ifelse(
xmpl.steps.df$landcover == "open",2,NA)))
head(xmpl.steps.df.num)
xmpl.steps.df.num$landcover <- ifelse(
xmpl.steps.df.num$landcover == "forest",1,ifelse(
xmpl.steps.df.num$landcover == "open",2,NA)))
head(xmpl.steps.df.num)
xmpl.steps.df.num$landcover
xmpl.steps.df.num$landcover <- as.numeric(xmpl.steps.df.num$landcover)
head(xmpl.steps.df.num$landcover)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df
xmpl.steps.df.num$landcover <- as.numeric(xmpl.steps.df.num$landcover)
xmpl.steps.df.num$landcover
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df
head(xmpl.steps.df)
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(xmpl.steps.df$lancover == "forest", 0,
ifelse(xmpl.steps.df$lancover == "open",1, NA)))
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(xmpl.steps.df$lancover == "forest", 0,
ifelse(xmpl.steps.df$lancover == "open",1, NA)))
xmpl.steps.df.num$landcover <-
ifelse(xmpl.steps.df$lancover == "forest",0,
ifelse(xmpl.steps.df$lancover == "open",1, NA)
xmpl.steps.df.num$landcover <-
ifelse(xmpl.steps.df$lancover == "forest",0,
ifelse(xmpl.steps.df$lancover == "open",1, NA))
xmpl.steps.df.num$landcover <-
ifelse(xmpl.steps.df$lancover == "forest",0,
ifelse(xmpl.steps.df$lancover == "open",1, NA))
xmpl.steps.df.num <- xmpl.steps.df
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df
xmpl.steps.df.num$landcover <- ifelse(
xmpl.steps.df$lancover == "forest",0, ifelse(
xmpl.steps.df$lancover == "open",1, NA))
xmpl.steps.df.num$landcover <- ifelse(
xmpl.steps.df.num$lancover == "forest",0, ifelse(
xmpl.steps.df.num$lancover == "open",1, NA))
View(xmpl.steps.df)
View(xmpl.steps.df.num)
xmpl.steps.df.num <- xmpl.steps.df[,-"landcover"]
xmpl.steps.df.num <- xmpl.steps.df[,/"landcover"]
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df[,-which(names(df) %in% "landcover"]
xmpl.steps.df.num <- xmpl.steps.df[,-which(names(df) %in% c("landcover")]
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- subset(xmpl.steps.df, select=-c(landcover)
xmpl.steps.df.num <- subset(xmpl.steps.df, select=-c(landcover))
View(xmpl.steps.df.num)
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(landcover.extr[,2] == 0,NA,
ifelse(landcover.extr[,2] < 5, 1,
ifelse(landcover.extr[,2] < 8, 2,NA))))
?as.numeric
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- xmpl.steps.df
xmpl.steps.df.num$landcover2 <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,NA)))
head(xmpl.steps.df.num)
summary(xmpl.steps.df.num)
rm(xmpl.steps.num)
rm(xmpl.steps.df.num)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- subset(xmpl.steps.df, select=-c(landcover))
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,NA)))
head(xmpl.steps.df.num)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- subset(xmpl.steps.df, select=-c(landcover))
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,NA)))
head(xmpl.steps.df.num)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
xmpl.steps.df.num <- subset(xmpl.steps.df, select=-c(landcover))
xmpl.steps.df.num$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",0,
ifelse(xmpl.steps.df$landcover == "open", 1,NA)))
head(xmpl.steps.df.num)
attach(xmpl.steps.df.num)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
cor(Z)
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist)
Z = cbind(ruggedness,canopycover,disthighway,distroad,landcover)
Z2 <- subset(xmpl.steps.df.num, select=c(ruggedness,canopycover,disthighway,distroad,landcover))
str(Z)
str(Z2)
cor(Z2)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
Z <- subset(xmpl.steps.df, select=c(ruggedness,canopycover,disthighway,distroad))
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",0,
ifelse(xmpl.steps.df$landcover == "open", 1,NA)))
head(Z)
xmpl.steps.df <- as.data.frame(xmpl.steps.spdf)
Z <- subset(xmpl.steps.df, select=c(ruggedness,canopycover,disthighway,distroad))
Z <- subset(xmpl.steps.df.num, select=c(ruggedness,canopycover,disthighway,distroad,landcover))
head(Z)
Z <- subset(xmpl.steps.df, select=c(ruggedness,canopycover,disthighway,distroad))
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",0,
ifelse(xmpl.steps.df$landcover == "open", 1,NA)))
cor(Z)
head(Z)
cor(Z)
Z <- subset(xmpl.steps.df, select=c(ruggedness,canopycover,disthighway,distroad))
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,NA)))
head(Z)
cor(Z)
Z <- subset(xmpl.steps.df, select=c(ruggedness,canopycover,disthighway,distroad))
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,0)))
head(Z)
cor(Z)
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",1,
ifelse(xmpl.steps.df$landcover == "open", 2,NA)))
head(Z)
cor(Z)
Z$landcover
?cor
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",0,
ifelse(xmpl.steps.df$landcover == "open", 1,NA)))
cor(Z, use="pairwise.complete.obs")
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist)
?pairs
?pairs
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist, use="pairwise.complete.obs")
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist, na.action = na.omit)
pairwise.complete.obs
?pairwise.complete.obs
??pairwise.complete.obs
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist, na.action = na.exclude)
cor(Z, use="pairwise.complete.obs")
Z$landcover <- as.numeric(
ifelse(xmpl.steps.df$landcover == "forest",0,
ifelse(xmpl.steps.df$landcover == "open", 1,NA)))
summary(Z$landcover)
cor(Z, use="pairwise.complete.obs")
panel.cor
panel.cor
panel.cor = function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y,use="pairwise.complete.obs"))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist, na.action = na.exclude)
?pairs
pairs
panel.cor
panel.hist
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y,use="pairwise.complete.obs"))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(Z, lower.panel=panel.smooth,
upper.panel=panel.cor,diag.panel=panel.hist)
library("adehabitatHR", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("adehabitatHS", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("hab", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("lme4", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("mclogit", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("move", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("effects", lib.loc="C:/Program Files/R/R-3.1.1/library")
